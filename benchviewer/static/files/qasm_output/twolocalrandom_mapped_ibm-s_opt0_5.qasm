// Benchmark was created by MQT Bench on 2022-04-11
// For more information about MQT Bench, please visit https://www.cda.cit.tum.de/mqtbench/
// MQT Bench version: 0.1.0
// Qiskit version: {'qiskit-terra': '0.19.2', 'qiskit-aer': '0.10.3', 'qiskit-ignis': '0.7.0', 'qiskit-ibmq-provider': '0.18.3', 'qiskit-aqua': '0.9.5', 'qiskit': '0.34.2', 'qiskit-nature': '0.3.1', 'qiskit-finance': '0.3.1', 'qiskit-optimization': '0.3.1', 'qiskit-machine-learning': '0.3.1'}
// Used Gate Set: ['id', 'rz', 'sx', 'x', 'cx', 'reset']
// Optimization Level: 0
// Coupling List: [[0, 1], [1, 0], [1, 2], [2, 1], [2, 3], [3, 2], [3, 4], [4, 3]]
// Compiled for architecture: ibm-s-fake_bogota

OPENQASM 2.0;
include "qelib1.inc";
qreg q[5];
creg meas[5];
rz(0.0) q[0];
sx q[0];
rz(3.84385331288853) q[0];
sx q[0];
rz(3*pi) q[0];
rz(0.0) q[1];
sx q[1];
rz(4.04620374729673) q[1];
sx q[1];
rz(3*pi) q[1];
cx q[0],q[1];
rz(0.0) q[2];
sx q[2];
rz(3.46944008424309) q[2];
sx q[2];
rz(3*pi) q[2];
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
cx q[0],q[1];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
cx q[1],q[0];
rz(0.0) q[3];
sx q[3];
rz(3.81011100647229) q[3];
sx q[3];
rz(3*pi) q[3];
cx q[2],q[3];
cx q[2],q[3];
cx q[3],q[2];
cx q[2],q[3];
cx q[1],q[2];
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
cx q[0],q[1];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
rz(0.0) q[4];
sx q[4];
rz(3.83209965199141) q[4];
sx q[4];
rz(3*pi) q[4];
cx q[3],q[4];
cx q[3],q[4];
cx q[4],q[3];
cx q[3],q[4];
cx q[2],q[3];
cx q[2],q[3];
cx q[3],q[2];
cx q[2],q[3];
cx q[1],q[2];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
rz(0.0) q[0];
sx q[0];
rz(3.92473084804192) q[0];
sx q[0];
rz(3*pi) q[0];
cx q[1],q[2];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
rz(0.0) q[0];
sx q[0];
rz(3.88318873291405) q[0];
sx q[0];
rz(3*pi) q[0];
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
rz(0.0) q[1];
sx q[1];
rz(3.65747821799361) q[1];
sx q[1];
rz(3*pi) q[1];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
rz(0.0) q[3];
sx q[3];
rz(4.09043974746514) q[3];
sx q[3];
rz(3*pi) q[3];
rz(0.0) q[4];
sx q[4];
rz(3.22978119741121) q[4];
sx q[4];
rz(3*pi) q[4];
cx q[4],q[3];
cx q[3],q[4];
cx q[4],q[3];
cx q[3],q[4];
cx q[3],q[2];
cx q[2],q[3];
cx q[3],q[2];
cx q[2],q[3];
cx q[2],q[1];
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
cx q[1],q[0];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
rz(0.0) q[0];
sx q[0];
rz(4.1045510654135) q[0];
sx q[0];
rz(3*pi) q[0];
cx q[4],q[3];
cx q[3],q[4];
cx q[4],q[3];
cx q[3],q[4];
cx q[3],q[2];
cx q[2],q[3];
cx q[3],q[2];
cx q[2],q[3];
cx q[2],q[1];
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
rz(0.0) q[1];
sx q[1];
rz(3.55495822773933) q[1];
sx q[1];
rz(3*pi) q[1];
cx q[0],q[1];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
cx q[4],q[3];
cx q[3],q[4];
cx q[4],q[3];
cx q[3],q[4];
cx q[3],q[2];
cx q[3],q[4];
cx q[4],q[3];
cx q[3],q[4];
cx q[3],q[2];
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
rz(0.0) q[1];
sx q[1];
rz(3.60575495237073) q[1];
sx q[1];
rz(3*pi) q[1];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
rz(0.0) q[4];
sx q[4];
rz(3.28940585393203) q[4];
sx q[4];
rz(3*pi) q[4];
cx q[3],q[4];
cx q[4],q[3];
cx q[3],q[4];
cx q[2],q[3];
cx q[2],q[3];
cx q[3],q[2];
cx q[2],q[3];
cx q[1],q[2];
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
rz(0.0) q[4];
sx q[4];
rz(3.80601206958137) q[4];
sx q[4];
rz(3*pi) q[4];
cx q[3],q[4];
cx q[2],q[3];
cx q[3],q[2];
cx q[2],q[3];
cx q[2],q[1];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
cx q[3],q[4];
cx q[2],q[3];
cx q[3],q[2];
cx q[2],q[3];
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
cx q[1],q[0];
cx q[0],q[1];
cx q[1],q[0];
cx q[0],q[1];
rz(0.0) q[0];
sx q[0];
rz(3.20958950339176) q[0];
sx q[0];
rz(3*pi) q[0];
cx q[3],q[4];
cx q[4],q[3];
cx q[3],q[4];
cx q[2],q[3];
cx q[2],q[1];
cx q[1],q[2];
cx q[2],q[1];
cx q[1],q[2];
rz(0.0) q[1];
sx q[1];
rz(3.86765450027853) q[1];
sx q[1];
rz(3*pi) q[1];
cx q[3],q[2];
rz(0.0) q[2];
sx q[2];
rz(3.65089147118883) q[2];
sx q[2];
rz(3*pi) q[2];
rz(0.0) q[3];
sx q[3];
rz(3.47901690153997) q[3];
sx q[3];
rz(3*pi) q[3];
rz(0.0) q[4];
sx q[4];
rz(3.75094013126919) q[4];
sx q[4];
rz(3*pi) q[4];
barrier q[2],q[3],q[4],q[1],q[0];
measure q[4] -> meas[0];
measure q[0] -> meas[1];
measure q[1] -> meas[2];
measure q[3] -> meas[3];
measure q[2] -> meas[4];
