OPENQASM 2.0;
include "qelib1.inc";
qreg q[4];
qreg flag[1];
creg c0[4];
u1(pi/2) q[0];
rx(pi/2) q[0];
u1(pi/2) q[0];
u1(pi/2) q[1];
rx(pi/2) q[1];
u1(pi/2) q[1];
u1(pi/2) q[2];
rx(pi/2) q[2];
u1(pi/2) q[2];
u1(pi/2) q[3];
rx(pi/2) q[3];
u1(pi/16) q[3];
rx(pi) flag[0];
cx q[3],flag[0];
u1(-pi/16) flag[0];
cx q[3],flag[0];
u1(pi/16) flag[0];
cx q[3],q[2];
u1(-pi/16) q[2];
cx q[2],flag[0];
u1(pi/16) flag[0];
cx q[2],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[2];
u1(-7*pi/16) q[2];
cx q[2],flag[0];
u1(-pi/16) flag[0];
cx q[2],flag[0];
u1(pi/16) flag[0];
cx q[2],q[1];
u1(-pi/16) q[1];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[1];
u1(pi/16) q[1];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[2],q[1];
u1(-pi/16) q[1];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[1];
u1(-7*pi/16) q[1];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[1],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[0];
u1(pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[2],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[0];
u1(pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[1],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
rx(pi/2) q[1];
u1(5*pi/8) q[1];
cx q[3],q[0];
u1(pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[2],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
rx(pi/2) q[2];
u1(5*pi/8) q[2];
cx q[3],q[0];
u1(-7*pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
rx(pi/2) q[0];
u1(9*pi/8) q[0];
cx q[0],q[1];
u1(-pi/8) q[1];
cx q[0],q[1];
cx q[1],q[2];
u1(-pi/8) q[2];
cx q[0],q[2];
u1(pi/8) q[2];
cx q[1],q[2];
u1(-pi/8) q[2];
cx q[0],q[2];
rx(pi/2) q[3];
u1(5*pi/8) q[3];
cx q[2],q[3];
u1(-pi/8) q[3];
cx q[1],q[3];
u1(pi/8) q[3];
cx q[2],q[3];
u1(-pi/8) q[3];
cx q[0],q[3];
u1(pi/8) q[3];
cx q[2],q[3];
u1(-pi/8) q[3];
cx q[1],q[3];
u1(pi/2) q[1];
rx(pi/2) q[1];
u1(-pi/2) q[1];
u1(pi/8) q[3];
cx q[2],q[3];
u1(pi/2) q[2];
rx(pi/2) q[2];
u1(-pi/2) q[2];
u1(-pi/8) q[3];
cx q[0],q[3];
rx(pi/2) q[0];
u1(-pi/2) q[0];
u1(pi/2) q[3];
rx(pi/2) q[3];
u1(-15*pi/16) q[3];
cx q[3],flag[0];
u1(-pi/16) flag[0];
cx q[3],flag[0];
u1(pi/16) flag[0];
cx q[3],q[2];
u1(-pi/16) q[2];
cx q[2],flag[0];
u1(pi/16) flag[0];
cx q[2],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[2];
u1(-7*pi/16) q[2];
cx q[2],flag[0];
u1(-pi/16) flag[0];
cx q[2],flag[0];
u1(pi/16) flag[0];
cx q[2],q[1];
u1(-pi/16) q[1];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[1];
u1(pi/16) q[1];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[2],q[1];
u1(-pi/16) q[1];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[1];
u1(-7*pi/16) q[1];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[1],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[0];
u1(pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[2],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[0];
u1(pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[1],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
rx(pi/2) q[1];
u1(5*pi/8) q[1];
cx q[3],q[0];
u1(pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[2],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
rx(pi/2) q[2];
u1(5*pi/8) q[2];
cx q[3],q[0];
u1(-7*pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
rx(pi/2) q[0];
u1(9*pi/8) q[0];
cx q[0],q[1];
u1(-pi/8) q[1];
cx q[0],q[1];
cx q[1],q[2];
u1(-pi/8) q[2];
cx q[0],q[2];
u1(pi/8) q[2];
cx q[1],q[2];
u1(-pi/8) q[2];
cx q[0],q[2];
rx(pi/2) q[3];
u1(5*pi/8) q[3];
cx q[2],q[3];
u1(-pi/8) q[3];
cx q[1],q[3];
u1(pi/8) q[3];
cx q[2],q[3];
u1(-pi/8) q[3];
cx q[0],q[3];
u1(pi/8) q[3];
cx q[2],q[3];
u1(-pi/8) q[3];
cx q[1],q[3];
u1(pi/2) q[1];
rx(pi/2) q[1];
u1(-pi/2) q[1];
u1(pi/8) q[3];
cx q[2],q[3];
u1(pi/2) q[2];
rx(pi/2) q[2];
u1(-pi/2) q[2];
u1(-pi/8) q[3];
cx q[0],q[3];
rx(pi/2) q[0];
u1(-pi/2) q[0];
u1(pi/2) q[3];
rx(pi/2) q[3];
u1(-15*pi/16) q[3];
cx q[3],flag[0];
u1(-pi/16) flag[0];
cx q[3],flag[0];
u1(pi/16) flag[0];
cx q[3],q[2];
u1(-pi/16) q[2];
cx q[2],flag[0];
u1(pi/16) flag[0];
cx q[2],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[2];
u1(-7*pi/16) q[2];
cx q[2],flag[0];
u1(-pi/16) flag[0];
cx q[2],flag[0];
u1(pi/16) flag[0];
cx q[2],q[1];
u1(-pi/16) q[1];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[1];
u1(pi/16) q[1];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[2],q[1];
u1(-pi/16) q[1];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[1];
u1(-7*pi/16) q[1];
cx q[1],flag[0];
u1(-pi/16) flag[0];
cx q[1],flag[0];
u1(pi/16) flag[0];
cx q[1],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[0];
u1(pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[2],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[3],q[0];
u1(pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[1],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
rx(pi/2) q[1];
u1(5*pi/8) q[1];
cx q[3],q[0];
u1(pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[2],q[0];
u1(-pi/16) q[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
rx(pi/2) q[2];
u1(5*pi/8) q[2];
cx q[3],q[0];
u1(-7*pi/16) q[0];
cx q[0],flag[0];
u1(-pi/16) flag[0];
cx q[0],flag[0];
u1(pi/16) flag[0];
rx(pi/2) q[0];
u1(9*pi/8) q[0];
cx q[0],q[1];
u1(-pi/8) q[1];
cx q[0],q[1];
cx q[1],q[2];
u1(-pi/8) q[2];
cx q[0],q[2];
u1(pi/8) q[2];
cx q[1],q[2];
u1(-pi/8) q[2];
cx q[0],q[2];
rx(pi/2) q[3];
u1(5*pi/8) q[3];
cx q[2],q[3];
u1(-pi/8) q[3];
cx q[1],q[3];
u1(pi/8) q[3];
cx q[2],q[3];
u1(-pi/8) q[3];
cx q[0],q[3];
u1(pi/8) q[3];
cx q[2],q[3];
u1(-pi/8) q[3];
cx q[1],q[3];
u1(pi/2) q[1];
rx(pi/2) q[1];
u1(-pi/2) q[1];
u1(pi/8) q[3];
cx q[2],q[3];
u1(pi/2) q[2];
rx(pi/2) q[2];
u1(-pi/2) q[2];
u1(-pi/8) q[3];
cx q[0],q[3];
rx(pi/2) q[0];
u1(-pi/2) q[0];
u1(pi/2) q[3];
rx(pi/2) q[3];
u1(-pi/2) q[3];
measure q[0] -> c0[0];
measure q[1] -> c0[1];
measure q[2] -> c0[2];
measure q[3] -> c0[3];
